set -g bell-action any

# macOS specific
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

# set -g default-terminal screen-256color
# setw -g pane-active-border-style fg="#306030",bg="#303030" # light-grey
set -g renumber-windows on                     # Useful when closing windows
set -g base-index 1                            # Start counting windows at 1

# Start numbering at 1
set -g base-index 1
set -g status off

# enable mouse and utf8, can fail frequently
# setw -g utf8 on
# set -g status-utf8 on
# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on
set -g mouse on

# increase scrolling history
set -g history-limit 30000

# Set status bar
set -g status on
set -g status-justify left
set -g status-bg "#1c1c1c" # black
set -g status-fg white
set -g status-interval 5
set -g status-right-length 150
set -g status-left ""
# set -g status-right "#[fg=green] %m-%d-%Y %H:%M #(whoami) 
set -g status-right ""

set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},bash},#{b:pane_current_path},#{pane_current_command}}"
set-option -gw window-status-format "#I:#{=10:window_name}#F"


# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
# Highlight active window
# set-window-option -g window-status-current-bg-style black
setw -g window-status-current-style fg=white,bg=black
# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key tT vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# 
# Update default binding of `Enter` to also use copy-pipe
# unbind-key -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# 
# # bind-key ']' to use pbpaste
bind-key ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
 
# Copy-paste integration
# set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

bind-key M-7 resize-pane -t 1 -x 90
bind-key M-8 resize-pane -t 1 -x 60
bind-key M-9 resize-pane -t 1 -x 30
bind-key M-0 resize-pane -t 0 -x 30

# Move around panels with Alt + arrow keys
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Monitor activity in panels
setw -g monitor-activity on
set -g visual-activity on

# Split vertically and horizontally.
unbind % # Remove default binding since we're replacing
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
# 

##CLIPBOARD selection integration.
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# fix the titles
# set -g set-titles on
# set -g set-titles-string "#I #W #h"
# set-window-option -g automatic-rename on

# clear screen
bind l send-keys -R C-m

# Neovim switching to 'Normal mode' switching fix
set-option -sg escape-time 0

# Plugins for saving and resurrecting tmux sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
run -b '~/.tmux/plugins/tpm/tpm'
